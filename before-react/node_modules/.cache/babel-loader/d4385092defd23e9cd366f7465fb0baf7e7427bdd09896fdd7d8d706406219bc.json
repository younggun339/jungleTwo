{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/NMM/react-frontend/src/components/allroom.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// allroom.jsx\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useParams } from 'react-router-dom';\nimport { Engine, Body } from \"matter-js\";\nimport io from \"socket.io-client\";\nimport useMatterSetup from \"../hooks/useMatterSetup\";\nimport useWebRTC from \"../hooks/useWebRTC\";\nimport startCapturing from './startCapturing';\nimport { resetGameObjects } from \"../utils/resetGameObjects\";\nimport { updateLsideSkeleton } from \"../utils/updateLsideSkeleton\";\nimport { updateRsideSkeleton } from \"../utils/updateRsideSkeleton\";\nimport \"../styles/game.css\";\nimport nestWebSocket from './NestWebSocket'; // NestWebSocket 모듈을 가져옵니다.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Video = props => {\n  _s();\n  const ref = useRef(null);\n  useEffect(() => {\n    const peer = props.peer;\n    console.log(\"peer: \", peer);\n    peer.on(\"stream\", stream => {\n      ref.current.srcObject = stream;\n      console.log(stream);\n      console.log(ref.current.srcObject);\n      startCapturing(stream, props.flaskSocketRef, props.canvasRef, props.indexRef);\n    });\n    return () => {\n      peer.removeAllListeners(\"stream\");\n    };\n  }, [props.peer]);\n  return /*#__PURE__*/_jsxDEV(\"video\", {\n    id: props.myIndexRef === 0 ? 'video-container-2' : 'video-container-1',\n    autoPlay: true,\n    playsInline: true,\n    ref: ref\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(Video, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\n_c = Video;\nfunction Game2() {\n  _s2();\n  const {\n    gameRoomID\n  } = useParams();\n  console.log(gameRoomID);\n  const flaskSocketRef = useRef(null);\n  const nestjsSocketRef = useRef(null);\n  const sceneRef = useRef(null);\n  const engineRef = useRef(Engine.create());\n  const canvasSize = {\n    x: 1600,\n    y: 600\n  };\n  const leftArmLeftRef = useRef(null);\n  const rightHand1RightRef = useRef(null);\n  const rightHand2RightRef = useRef(null);\n  const mouseRef = useRef(null);\n  const bombRef = useRef(null);\n  const canvasRef = useRef(null); // 캔버스 태그 참조\n\n  useEffect(() => {\n    flaskSocketRef.current = io(\"http://43.203.29.69\");\n    nestjsSocketRef.current = io(\"http://43.203.29.69/mouse-journey\", {\n      path: \"/mouse-journey\"\n    });\n    nestjsSocketRef.current.emit(\"test\", \"test\");\n    console.log(\"test!\");\n  }, []);\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    // testResponse 이벤트에 대한 핸들러를 설정합니다.\n    const handleTestResponse = data => {\n      setMessage(data);\n      console.log('Received testResponse:', data);\n    };\n\n    // 이벤트 핸들러를 등록합니다.\n    nestWebSocket.onTestResponse(handleTestResponse);\n\n    // 컴포넌트 마운트 시 서버로 'test' 이벤트를 바로 전송합니다.\n    nestWebSocket.sendTest('test');\n    console.log('Sent test event immediately after component mounted.');\n\n    // 컴포넌트 언마운트 시 이벤트 핸들러를 정리합니다.\n    return () => {\n      nestWebSocket.socket.off('testResponse', handleTestResponse);\n    };\n  }, []); // 종속성 배열을 빈 배열로 설정하여 컴포넌트 마운트 시 1회만 실행\n\n  const [showModal, setShowModal] = useState(true);\n  const [isSimStarted, setIsSimStarted] = useState(false);\n  const [isGameStarted, setIsGameStarted] = useState(false);\n  const [isGoalReached, setIsGoalReached] = useState(false);\n  const [countdown, setCountdown] = useState(3);\n  const {\n    userVideo,\n    peers,\n    indexRef\n  } = useWebRTC(flaskSocketRef, gameRoomID, canvasRef, setIsGoalReached, setCountdown, setIsGameStarted, setShowModal);\n  console.log(\"peer info:\", peers);\n  useMatterSetup({\n    canvasSize,\n    sceneRef,\n    engineRef,\n    leftArmLeftRef,\n    rightHand1RightRef,\n    rightHand2RightRef,\n    mouseRef,\n    bombRef,\n    flaskSocketRef,\n    nestjsSocketRef\n  });\n  useEffect(() => {\n    const handleLeftsideBodyCoords = data => {\n      const {\n        joint1Start,\n        joint1End\n      } = data;\n      updateLsideSkeleton(leftArmLeftRef, joint1Start, joint1End, canvasSize);\n    };\n    const handleRightsideBodyCoords = data => {\n      const {\n        joint1,\n        joint2,\n        joint3\n      } = data;\n      updateRsideSkeleton(rightHand1RightRef, joint1, joint2, canvasSize);\n      updateRsideSkeleton(rightHand2RightRef, joint2, joint3, canvasSize);\n    };\n    if (!isSimStarted) {\n      flaskSocketRef.current.on(\"body-coords-L\", handleLeftsideBodyCoords);\n      flaskSocketRef.current.on(\"body-coords-R\", handleRightsideBodyCoords);\n    } else {\n      flaskSocketRef.current.off(\"body-coords-L\", handleLeftsideBodyCoords);\n      flaskSocketRef.current.off(\"body-coords-R\", handleRightsideBodyCoords);\n    }\n    return () => {\n      flaskSocketRef.current.off(\"body-coords-L\", handleLeftsideBodyCoords);\n      flaskSocketRef.current.off(\"body-coords-R\", handleRightsideBodyCoords);\n    };\n  }, [isSimStarted]);\n\n  // 시뮬레이션 시작 이벤트 -> nestJS 서버로 스켈레톤 추출 지형을 전송\n  useEffect(() => {\n    if (isSimStarted) {\n      const fixedRef1 = {\n        x: leftArmLeftRef.current.position.x,\n        y: leftArmLeftRef.current.position.y,\n        width: Math.abs(leftArmLeftRef.current.vertices[1].x - leftArmLeftRef.current.vertices[0].x),\n        angle: leftArmLeftRef.current.angle\n      };\n      const fixedRef2 = {\n        x: rightHand1RightRef.current.position.x,\n        y: rightHand1RightRef.current.position.y,\n        width: Math.abs(rightHand1RightRef.current.vertices[1].x - rightHand1RightRef.current.vertices[0].x),\n        angle: rightHand1RightRef.current.angle\n      };\n      const fixedRef3 = {\n        x: rightHand2RightRef.current.position.x,\n        y: rightHand2RightRef.current.position.y,\n        width: Math.abs(rightHand2RightRef.current.vertices[1].x - rightHand2RightRef.current.vertices[0].x),\n        angle: rightHand2RightRef.current.angle\n      };\n      fetch(\"/simulation-start\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          fixedRef1,\n          fixedRef2,\n          fixedRef3\n        })\n      }).then(response => response.json()).then(data => {\n        console.log(\"Simulation start response:\", data);\n        if (data.isBombed) {\n          explodeBomb();\n        }\n        if (data.isGameClear) {\n          winGame();\n        } else {\n          loseGame();\n        }\n      }).catch(error => console.error(\"Error sending simulation start:\", error));\n    }\n  }, [isSimStarted]);\n\n  // 쥐 위치 및 폭탄의 위치 및 각도를 매 프레임마다 업데이트\n  useEffect(() => {\n    if (isSimStarted) {\n      const handleMouseJourney = data => {\n        console.log(data);\n        console.log(\"mouse x: \", data.mousePos.x);\n        console.log(\"mouse y: \", data.mousePos.y);\n        Body.setPosition(mouseRef.current, {\n          x: data.mousePos.x,\n          y: data.mousePos.y\n        });\n        Body.setPosition(bombRef.current, {\n          x: data.bombPos.x,\n          y: data.bombPos.y\n        });\n        Body.setAngle(bombRef.current, data.bombAngle);\n      };\n      nestjsSocketRef.current.on(\"mouse-journey\", handleMouseJourney);\n      return () => {\n        nestjsSocketRef.current.off(\"mouse-journey\", handleMouseJourney);\n      };\n    }\n  }, [isSimStarted]);\n  // ==============================================\n\n  useEffect(() => {\n    if (isGameStarted && countdown > 0) {\n      const interval = setInterval(() => {\n        setCountdown(prevCount => prevCount - 1);\n      }, 1000);\n      return () => clearInterval(interval);\n    } else if (countdown === 0) {\n      setIsSimStarted(true);\n      setCountdown(null);\n    }\n  }, [isGameStarted, countdown]);\n  const startGame = () => {\n    flaskSocketRef.current.emit(\"start-game\");\n    setIsGoalReached(false);\n    setCountdown(3);\n    setIsGameStarted(true);\n    setShowModal(false);\n  };\n  const explodeBomb = () => {\n    console.log(\"bomb exploded\");\n  };\n  const winGame = () => {\n    alert(\"game cleared\");\n    resetGameObjects(mouseRef, bombRef, setIsSimStarted, setIsGameStarted);\n  };\n  const loseGame = () => {\n    alert(\"game over\");\n    resetGameObjects(mouseRef, bombRef, setIsSimStarted, setIsGameStarted);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"matter-container\",\n      ref: sceneRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this), peers.slice(0, indexRef.current).map((peer, index) => /*#__PURE__*/_jsxDEV(Video, {\n      peer: peer.peer,\n      canvasRef: canvasRef.current,\n      myIndexRef: indexRef.current,\n      flaskSocketRef: flaskSocketRef.current\n    }, `${peer.peerID}-${index}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 13\n    }, this)), /*#__PURE__*/_jsxDEV(\"video\", {\n      id: indexRef.current === 0 ? 'video-container-1' : 'video-container-2',\n      muted: true,\n      ref: userVideo,\n      autoPlay: true,\n      playsInline: true,\n      style: {\n        order: indexRef.current\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        display: 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this), peers.slice(indexRef.current).map((peer, index) => /*#__PURE__*/_jsxDEV(Video, {\n      peer: peer.peer,\n      canvasRef: canvasRef.current,\n      myIndexRef: indexRef.current,\n      flaskSocketRef: flaskSocketRef.current\n    }, `${peer.peerID}-${index}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 13\n    }, this)), isGameStarted && countdown > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"countdown\",\n      children: countdown\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 9\n    }, this), !isGameStarted &&\n    /*#__PURE__*/\n    /*isLeftCamLoaded && isRightCamLoaded &&*/\n    _jsxDEV(\"button\", {\n      onClick: startGame,\n      id: \"start-button\",\n      children: \"Start Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 238,\n    columnNumber: 5\n  }, this);\n}\n_s2(Game2, \"qaohz756GpZohhuestRruXfb3lw=\", false, function () {\n  return [useParams, useWebRTC, useMatterSetup];\n});\n_c2 = Game2;\nexport default Game2;\nvar _c, _c2;\n$RefreshReg$(_c, \"Video\");\n$RefreshReg$(_c2, \"Game2\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useParams","Engine","Body","io","useMatterSetup","useWebRTC","startCapturing","resetGameObjects","updateLsideSkeleton","updateRsideSkeleton","nestWebSocket","jsxDEV","_jsxDEV","Video","props","_s","ref","peer","console","log","on","stream","current","srcObject","flaskSocketRef","canvasRef","indexRef","removeAllListeners","id","myIndexRef","autoPlay","playsInline","fileName","_jsxFileName","lineNumber","columnNumber","_c","Game2","_s2","gameRoomID","nestjsSocketRef","sceneRef","engineRef","create","canvasSize","x","y","leftArmLeftRef","rightHand1RightRef","rightHand2RightRef","mouseRef","bombRef","path","emit","message","setMessage","handleTestResponse","data","onTestResponse","sendTest","socket","off","showModal","setShowModal","isSimStarted","setIsSimStarted","isGameStarted","setIsGameStarted","isGoalReached","setIsGoalReached","countdown","setCountdown","userVideo","peers","handleLeftsideBodyCoords","joint1Start","joint1End","handleRightsideBodyCoords","joint1","joint2","joint3","fixedRef1","position","width","Math","abs","vertices","angle","fixedRef2","fixedRef3","fetch","method","headers","body","JSON","stringify","then","response","json","isBombed","explodeBomb","isGameClear","winGame","loseGame","catch","error","handleMouseJourney","mousePos","setPosition","bombPos","setAngle","bombAngle","interval","setInterval","prevCount","clearInterval","startGame","alert","className","children","slice","map","index","peerID","muted","style","order","display","onClick","_c2","$RefreshReg$"],"sources":["/home/ubuntu/NMM/react-frontend/src/components/allroom.jsx"],"sourcesContent":["// allroom.jsx\nimport React, { useEffect, useRef, useState} from \"react\";\nimport { useParams } from 'react-router-dom';\nimport { Engine, Body } from \"matter-js\";\nimport io from \"socket.io-client\";\nimport useMatterSetup from \"../hooks/useMatterSetup\";\nimport useWebRTC from \"../hooks/useWebRTC\";\nimport startCapturing from './startCapturing';\nimport { resetGameObjects } from \"../utils/resetGameObjects\";\nimport { updateLsideSkeleton } from \"../utils/updateLsideSkeleton\";\nimport { updateRsideSkeleton } from \"../utils/updateRsideSkeleton\";\nimport \"../styles/game.css\";\nimport nestWebSocket from './NestWebSocket';  // NestWebSocket 모듈을 가져옵니다.\n\n\nconst Video = (props) => {\n  const ref = useRef(null);\n  useEffect(() => {\n    const peer = props.peer;\n    console.log(\"peer: \",peer)\n    peer.on(\"stream\", stream => {\n      ref.current.srcObject = stream;\n      console.log(stream);\n      console.log(ref.current.srcObject);\n      startCapturing(stream, props.flaskSocketRef, props.canvasRef, props.indexRef);\n    });\n\n    return () => {\n      peer.removeAllListeners(\"stream\");\n    };\n  }, [props.peer]);\n\n  return (\n    <video id={props.myIndexRef === 0 ? 'video-container-2' : 'video-container-1'} autoPlay playsInline ref={ref} />\n  );\n}\n\n\n\nfunction Game2() {\n  const { gameRoomID } =  useParams();\n  console.log(gameRoomID);\n  const flaskSocketRef = useRef(null);\n  const nestjsSocketRef = useRef(null);\n\n  const sceneRef = useRef(null);\n  const engineRef = useRef(Engine.create());\n  const canvasSize = { x: 1600, y: 600 };\n  const leftArmLeftRef = useRef(null);\n  const rightHand1RightRef = useRef(null);\n  const rightHand2RightRef = useRef(null);\n  const mouseRef = useRef(null);\n  const bombRef = useRef(null);\n  const canvasRef = useRef(null); // 캔버스 태그 참조\n\n  useEffect(() => {\n    flaskSocketRef.current = io(\"http://43.203.29.69\");\n    nestjsSocketRef.current = io(\"http://43.203.29.69/mouse-journey\", {path :\"/mouse-journey\"});\n    nestjsSocketRef.current.emit(\"test\", \"test\");\n    console.log(\"test!\")\n  }, []);\n\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    // testResponse 이벤트에 대한 핸들러를 설정합니다.\n    const handleTestResponse = (data) => {\n      setMessage(data);\n      console.log('Received testResponse:', data);\n    };\n\n    // 이벤트 핸들러를 등록합니다.\n    nestWebSocket.onTestResponse(handleTestResponse);\n\n    // 컴포넌트 마운트 시 서버로 'test' 이벤트를 바로 전송합니다.\n    nestWebSocket.sendTest('test');\n    console.log('Sent test event immediately after component mounted.');\n\n    // 컴포넌트 언마운트 시 이벤트 핸들러를 정리합니다.\n    return () => {\n      nestWebSocket.socket.off('testResponse', handleTestResponse);\n    };\n  }, []); // 종속성 배열을 빈 배열로 설정하여 컴포넌트 마운트 시 1회만 실행\n\n  \n  const [showModal, setShowModal] = useState(true);\n  const [isSimStarted, setIsSimStarted] = useState(false);\n  const [isGameStarted, setIsGameStarted] = useState(false);\n  const [isGoalReached, setIsGoalReached] = useState(false);\n  const [countdown, setCountdown] = useState(3);\n  \n  const { userVideo, peers, indexRef } = useWebRTC(flaskSocketRef, gameRoomID, canvasRef, setIsGoalReached, setCountdown, setIsGameStarted, setShowModal);\n  console.log(\"peer info:\", peers);\n  useMatterSetup(\n    {\n      canvasSize,\n      sceneRef,\n      engineRef,\n      leftArmLeftRef,\n      rightHand1RightRef,\n      rightHand2RightRef,\n      mouseRef,\n      bombRef,\n      flaskSocketRef,\n      nestjsSocketRef\n    }\n  );\n\n  useEffect(() => {\n    const handleLeftsideBodyCoords = (data) => {\n      const { joint1Start, joint1End } = data;\n      updateLsideSkeleton(leftArmLeftRef, joint1Start, joint1End, canvasSize);\n    };\n    const handleRightsideBodyCoords = (data) => {\n      const { joint1, joint2, joint3 } = data;\n      updateRsideSkeleton(rightHand1RightRef, joint1, joint2, canvasSize);\n      updateRsideSkeleton(rightHand2RightRef, joint2, joint3, canvasSize);\n    };\n\n    if (!isSimStarted) {\n      flaskSocketRef.current.on(\"body-coords-L\", handleLeftsideBodyCoords);\n      flaskSocketRef.current.on(\"body-coords-R\", handleRightsideBodyCoords);\n    } else {\n      flaskSocketRef.current.off(\"body-coords-L\", handleLeftsideBodyCoords);\n      flaskSocketRef.current.off(\"body-coords-R\", handleRightsideBodyCoords);\n    }\n\n    return () => {\n      flaskSocketRef.current.off(\"body-coords-L\", handleLeftsideBodyCoords);\n      flaskSocketRef.current.off(\"body-coords-R\", handleRightsideBodyCoords);\n    };\n  }, [isSimStarted]);\n\n  // 시뮬레이션 시작 이벤트 -> nestJS 서버로 스켈레톤 추출 지형을 전송\n  useEffect(() => {\n    if (isSimStarted) {\n      const fixedRef1 = {\n        x: leftArmLeftRef.current.position.x,\n        y: leftArmLeftRef.current.position.y,\n        width: Math.abs(leftArmLeftRef.current.vertices[1].x - leftArmLeftRef.current.vertices[0].x),\n        angle: leftArmLeftRef.current.angle,\n      };\n      const fixedRef2 = {\n        x: rightHand1RightRef.current.position.x,\n        y: rightHand1RightRef.current.position.y,\n        width: Math.abs(rightHand1RightRef.current.vertices[1].x - rightHand1RightRef.current.vertices[0].x),\n        angle: rightHand1RightRef.current.angle,\n      };\n      const fixedRef3 = {\n        x: rightHand2RightRef.current.position.x,\n        y: rightHand2RightRef.current.position.y,\n        width: Math.abs(rightHand2RightRef.current.vertices[1].x - rightHand2RightRef.current.vertices[0].x),\n        angle: rightHand2RightRef.current.angle,\n      };\n\n      fetch(\"/simulation-start\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          fixedRef1,\n          fixedRef2,\n          fixedRef3,\n        }),\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          console.log(\"Simulation start response:\", data);\n          if (data.isBombed) {\n            explodeBomb();\n          }\n          if (data.isGameClear) {\n            winGame();\n          } else {\n            loseGame();\n          }\n        })\n        .catch((error) =>\n          console.error(\"Error sending simulation start:\", error)\n        );\n    }\n  }, [isSimStarted]);\n\n  // 쥐 위치 및 폭탄의 위치 및 각도를 매 프레임마다 업데이트\n  useEffect(() => {\n    if (isSimStarted) {\n      const handleMouseJourney = (data) => {\n        console.log(data)\n        console.log(\"mouse x: \", data.mousePos.x)\n        console.log(\"mouse y: \", data.mousePos.y)\n        Body.setPosition(mouseRef.current, { x: data.mousePos.x, y: data.mousePos.y });\n        Body.setPosition(bombRef.current, { x: data.bombPos.x, y: data.bombPos.y });\n        Body.setAngle(bombRef.current, data.bombAngle);\n      };\n\n      nestjsSocketRef.current.on(\"mouse-journey\", handleMouseJourney);\n\n      return () => {\n        nestjsSocketRef.current.off(\"mouse-journey\", handleMouseJourney);\n      };\n    }\n  }, [isSimStarted]);\n  // ==============================================\n\n  useEffect(() => {\n    if (isGameStarted && countdown > 0) {\n      const interval = setInterval(() => {\n        setCountdown((prevCount) => prevCount - 1);\n      }, 1000);\n      return () => clearInterval(interval);\n    } else if (countdown === 0) {\n      setIsSimStarted(true);\n      setCountdown(null);\n    }\n  }, [isGameStarted, countdown]);\n\n  const startGame = () => {\n    flaskSocketRef.current.emit(\"start-game\");\n    setIsGoalReached(false);\n    setCountdown(3);\n    setIsGameStarted(true);\n    setShowModal(false);\n  };\n\n  const explodeBomb = () => {\n    console.log(\"bomb exploded\");\n  };\n  const winGame = () => {\n    alert(\"game cleared\");\n    resetGameObjects(mouseRef, bombRef, setIsSimStarted, setIsGameStarted);\n  };\n  const loseGame = () => {\n    alert(\"game over\");\n    resetGameObjects(mouseRef, bombRef, setIsSimStarted, setIsGameStarted);\n  };\n\n  return (\n    <div className=\"App\">\n      <div id=\"matter-container\" ref={sceneRef}></div>\n      {\n        peers.slice(0, indexRef.current).map((peer, index) => (\n            <Video key={`${peer.peerID}-${index}`} peer={peer.peer} canvasRef={canvasRef.current} myIndexRef={indexRef.current} flaskSocketRef={flaskSocketRef.current}/>\n        ))}\n      \n      {\n          <video id={indexRef.current === 0 ? 'video-container-1' : 'video-container-2'} muted ref={userVideo} autoPlay playsInline style={{ order: indexRef.current }} />\n      }\n      <canvas ref={canvasRef} style={{ display: 'none' }} />\n      {\n        peers.slice(indexRef.current).map((peer, index) => (\n            <Video key={`${peer.peerID}-${index}`} peer={peer.peer} canvasRef={canvasRef.current} myIndexRef={indexRef.current} flaskSocketRef={flaskSocketRef.current}/>\n        ))}\n      {isGameStarted && countdown > 0 && (\n        <div id=\"countdown\">{countdown}</div>\n      )}\n      {!isGameStarted && /*isLeftCamLoaded && isRightCamLoaded &&*/ (\n        <button onClick={startGame} id=\"start-button\">\n          Start Game\n        </button>\n      )}\n      {/* {\n        !isLeftCamLoaded && !isRightCamLoaded && (\n          <div id=\"loading-overlay\">Loading...</div>\n        )\n      } */}\n    </div>\n  );\n}\n\nexport default Game2;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}