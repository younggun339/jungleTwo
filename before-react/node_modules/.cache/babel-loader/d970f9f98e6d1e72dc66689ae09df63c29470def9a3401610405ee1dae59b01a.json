{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/NMM/react-frontend/src/components/Game2.tsx\",\n  _s = $RefreshSig$();\n// Game2.tsx\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Engine } from \"matter-js\";\nimport { io } from \"socket.io-client\";\nimport useMatterSetup from \"../hooks/useMatterSetup\";\nimport useWebRTC from '../hooks/useWebRTC';\nimport useSimulation from \"../hooks/useSimulation\";\nimport { resetGameObjects } from \"../utils/resetGameObjects\";\nimport Video from \"./Video\";\nimport \"../styles/game.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game2 = () => {\n  _s();\n  const nestjsSocketRef = useRef(null);\n  const sceneRef = useRef(null);\n  const engineRef = useRef(Engine.create());\n  const canvasSize = {\n    x: 1600,\n    y: 600\n  };\n  const leftArmLeftRef = useRef(null);\n  const rightHand1RightRef = useRef(null);\n  const rightHand2RightRef = useRef(null);\n  const mouseRef = useRef(null);\n  const bombRef = useRef(null);\n  // TODO: userParam으로 \"game/\"+id 이렇게 바꿔야댐\n  const gameRoomId = \"game\";\n  // const { gameRoomID } = useParams<string | null>();\n\n  useEffect(() => {\n    nestjsSocketRef.current = io(\"http://43.203.29.69:8080/\");\n  }, []);\n  const startGame = () => {\n    console.log(\"if 전: \", isGameStarted);\n    if (!isGameStarted) {\n      setIsGameStarted(true); // <--\n      setIsGoalReached(false);\n      console.log(\"if 후: \", isGameStarted);\n      setCountdown(3);\n      setShowModal(false);\n      if (nestjsSocketRef.current) {\n        // nestjsSocketRef.current.emit('start-game', { roomId: gameRoomId });\n      }\n    }\n  };\n  const {\n    userVideo,\n    peers,\n    indexRef,\n    sendLeftHandJoint,\n    sendRightHandJoint\n  } = useWebRTC(nestjsSocketRef, gameRoomId, leftArmLeftRef, rightHand1RightRef, rightHand2RightRef, canvasSize, startGame);\n  const [showModal, setShowModal] = useState(true);\n  const [isSimStarted, setIsSimStarted] = useState(false);\n  const [isGameStarted, setIsGameStarted] = useState(false);\n  const [isGoalReached, setIsGoalReached] = useState(false);\n  const [countdown, setCountdown] = useState(3);\n  const [isRightCamLoaded, setIsRightCamLoaded] = useState(false);\n  const [isMyCamLoaded, setIsMyCamLoaded] = useState(false);\n  useMatterSetup({\n    canvasSize,\n    sceneRef,\n    engineRef,\n    leftArmLeftRef,\n    rightHand1RightRef,\n    rightHand2RightRef,\n    mouseRef,\n    bombRef,\n    nestjsSocketRef\n  });\n\n  // useTensorFlow(\n  //   userVideo,\n  //   indexRef,\n  //   peers,\n  //   sendLeftHandJoint,\n  //   sendRightHandJoint,\n  //   leftArmLeftRef,\n  //   rightHand1RightRef,\n  //   rightHand2RightRef,\n  //   canvasSize,\n  //   isMyCamLoaded\n  // );\n\n  useSimulation({\n    isSimStarted,\n    leftArmLeftRef,\n    rightHand1RightRef,\n    rightHand2RightRef,\n    mouseRef,\n    bombRef,\n    nestjsSocketRef,\n    explodeBomb: () => console.log(\"bomb exploded\"),\n    winGame: () => {\n      alert(\"game cleared\");\n      resetGameObjects(mouseRef, bombRef, setIsSimStarted, setIsGameStarted);\n    },\n    loseGame: () => {\n      alert(\"game over\");\n      resetGameObjects(mouseRef, bombRef, setIsSimStarted, setIsGameStarted);\n    }\n  });\n  useEffect(() => {\n    if (isGameStarted && countdown && countdown > 0) {\n      const interval = setInterval(() => {\n        setCountdown(prevCount => prevCount ? prevCount - 1 : 0);\n      }, 1000);\n      return () => clearInterval(interval);\n    } else if (countdown === 0) {\n      setIsSimStarted(true);\n      setCountdown(null);\n    }\n  }, [isGameStarted, countdown]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"matter-container\",\n      ref: sceneRef,\n      children: [peers.slice(0, indexRef.current).map((peer, index) => /*#__PURE__*/_jsxDEV(Video, {\n        peer: peer.peer,\n        peers: peers,\n        myIndexRef: 1\n      }, `${peer.peerID}-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"video\", {\n        id: indexRef.current === 0 ? \"video-container-1\" : \"video-container-2\",\n        muted: true,\n        ref: userVideo,\n        autoPlay: true,\n        playsInline: true,\n        style: {\n          order: indexRef.current\n        },\n        onLoadedData: () => setIsMyCamLoaded(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), peers.slice(indexRef.current).map((peer, index) => /*#__PURE__*/_jsxDEV(Video, {\n        peer: peer.peer,\n        peers: peers,\n        myIndexRef: 0\n        // onLoaded={() => setIsRightCamLoaded(true)}\n      }, `${peer.peerID}-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), isGameStarted && countdown && countdown > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"countdown\",\n      children: countdown\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 55\n    }, this), !isGameStarted && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startGame,\n      id: \"start-button\",\n      children: \"Start Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n};\n_s(Game2, \"v+T97D7JNjtyVqf2+SQvlCGUuKs=\", false, function () {\n  return [useWebRTC, useMatterSetup, useSimulation];\n});\n_c = Game2;\nexport default Game2;\nvar _c;\n$RefreshReg$(_c, \"Game2\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Engine","io","useMatterSetup","useWebRTC","useSimulation","resetGameObjects","Video","jsxDEV","_jsxDEV","Game2","_s","nestjsSocketRef","sceneRef","engineRef","create","canvasSize","x","y","leftArmLeftRef","rightHand1RightRef","rightHand2RightRef","mouseRef","bombRef","gameRoomId","current","startGame","console","log","isGameStarted","setIsGameStarted","setIsGoalReached","setCountdown","setShowModal","userVideo","peers","indexRef","sendLeftHandJoint","sendRightHandJoint","showModal","isSimStarted","setIsSimStarted","isGoalReached","countdown","isRightCamLoaded","setIsRightCamLoaded","isMyCamLoaded","setIsMyCamLoaded","explodeBomb","winGame","alert","loseGame","interval","setInterval","prevCount","clearInterval","className","children","id","ref","slice","map","peer","index","myIndexRef","peerID","fileName","_jsxFileName","lineNumber","columnNumber","muted","autoPlay","playsInline","style","order","onLoadedData","onClick","_c","$RefreshReg$"],"sources":["/home/ubuntu/NMM/react-frontend/src/components/Game2.tsx"],"sourcesContent":["// Game2.tsx\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useParams } from 'react-router-dom';\nimport { Engine, Body } from \"matter-js\";\nimport { io, Socket } from \"socket.io-client\";\nimport useMatterSetup from \"../hooks/useMatterSetup\";\nimport useWebRTC, { WebRTCResult } from '../hooks/useWebRTC';\nimport useTensorFlow from \"../hooks/useTensorFlow\";\nimport useSimulation from \"../hooks/useSimulation\";\nimport { resetGameObjects } from \"../utils/resetGameObjects\";\nimport Video from \"./Video\";\nimport \"../styles/game.css\";\n\n\nconst Game2: React.FC = () => {\n  const nestjsSocketRef = useRef<Socket | null>(null);\n  const sceneRef = useRef<HTMLDivElement>(null);\n  const engineRef = useRef(Engine.create());\n  const canvasSize = { x: 1600, y: 600 };\n  const leftArmLeftRef = useRef<Body | null>(null);\n  const rightHand1RightRef = useRef<Body | null>(null);\n  const rightHand2RightRef = useRef<Body | null>(null);\n  const mouseRef = useRef<Body | null>(null);\n  const bombRef = useRef<Body | null>(null);\n  // TODO: userParam으로 \"game/\"+id 이렇게 바꿔야댐\n  const gameRoomId = \"game\";\n  // const { gameRoomID } = useParams<string | null>();\n\n  useEffect(() => {\n    nestjsSocketRef.current = io(\"http://43.203.29.69:8080/\");\n  }, []);\n\n  const startGame = () => {\n    console.log(\"if 전: \", isGameStarted);\n    if (!isGameStarted) {\n      setIsGameStarted(true); // <--\n      setIsGoalReached(false);\n      console.log(\"if 후: \", isGameStarted);\n      setCountdown(3);\n      setShowModal(false);\n      \n      if (nestjsSocketRef.current) {\n        // nestjsSocketRef.current.emit('start-game', { roomId: gameRoomId });\n      }\n    }\n  };\n\n  const { userVideo, peers, indexRef, sendLeftHandJoint, sendRightHandJoint } = useWebRTC(\n    nestjsSocketRef, \n    gameRoomId, \n    leftArmLeftRef, \n    rightHand1RightRef, \n    rightHand2RightRef, \n    canvasSize, \n    startGame\n  ) as WebRTCResult;\n\n  const [showModal, setShowModal] = useState(true);\n  const [isSimStarted, setIsSimStarted] = useState(false);\n  const [isGameStarted, setIsGameStarted] = useState(false);\n  const [isGoalReached, setIsGoalReached] = useState(false);\n  const [countdown, setCountdown] = useState<number | null>(3);\n  const [isRightCamLoaded, setIsRightCamLoaded] = useState(false);\n  const [isMyCamLoaded, setIsMyCamLoaded] = useState(false);\n\n  useMatterSetup({\n    canvasSize,\n    sceneRef,\n    engineRef,\n    leftArmLeftRef,\n    rightHand1RightRef,\n    rightHand2RightRef,\n    mouseRef,\n    bombRef,\n    nestjsSocketRef,\n  });\n\n  // useTensorFlow(\n  //   userVideo,\n  //   indexRef,\n  //   peers,\n  //   sendLeftHandJoint,\n  //   sendRightHandJoint,\n  //   leftArmLeftRef,\n  //   rightHand1RightRef,\n  //   rightHand2RightRef,\n  //   canvasSize,\n  //   isMyCamLoaded\n  // );\n\n  useSimulation({\n    isSimStarted,\n    leftArmLeftRef,\n    rightHand1RightRef,\n    rightHand2RightRef,\n    mouseRef,\n    bombRef,\n    nestjsSocketRef,\n    explodeBomb: () => console.log(\"bomb exploded\"),\n    winGame: () => {\n      alert(\"game cleared\");\n      resetGameObjects(mouseRef, bombRef, setIsSimStarted, setIsGameStarted);\n    },\n    loseGame: () => {\n      alert(\"game over\");\n      resetGameObjects(mouseRef, bombRef, setIsSimStarted, setIsGameStarted);\n    },\n  });\n\n  useEffect(() => {\n    if (isGameStarted && countdown && countdown > 0) {\n      const interval = setInterval(() => {\n        setCountdown((prevCount) => (prevCount ? prevCount - 1 : 0));\n      }, 1000);\n      return () => clearInterval(interval);\n    } else if (countdown === 0) {\n      setIsSimStarted(true);\n      setCountdown(null);\n    }\n  }, [isGameStarted, countdown]);\n\n  return (\n    <div className=\"App\">\n      <div id=\"matter-container\" ref={sceneRef}>\n        {peers.slice(0, indexRef.current).map((peer, index) => (\n          <Video\n            key={`${peer.peerID}-${index}`}\n            peer={peer.peer}\n            peers={peers}\n            myIndexRef={1}\n          />\n        ))}\n\n        <video\n          id={indexRef.current === 0 ? \"video-container-1\" : \"video-container-2\"}\n          muted\n          ref={userVideo}\n          autoPlay\n          playsInline\n          style={{ order: indexRef.current }}\n          onLoadedData={() => setIsMyCamLoaded(true)}\n        />\n\n        {peers.slice(indexRef.current).map((peer, index) => (\n          <Video\n            key={`${peer.peerID}-${index}`}\n            peer={peer.peer}\n            peers={peers}\n            myIndexRef={0}\n            // onLoaded={() => setIsRightCamLoaded(true)}\n          />\n        ))}\n      </div>\n\n      {isGameStarted && countdown && countdown > 0 && <div id=\"countdown\">{countdown}</div>}\n      {!isGameStarted && (\n        <button onClick={startGame} id=\"start-button\">\n          Start Game\n        </button>\n      )}\n      {/* {!isRightCamLoaded && (\n        <div id=\"loading-overlay\">Loading...</div>\n      )} */}\n    </div>\n  );\n};\n\nexport default Game2;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}