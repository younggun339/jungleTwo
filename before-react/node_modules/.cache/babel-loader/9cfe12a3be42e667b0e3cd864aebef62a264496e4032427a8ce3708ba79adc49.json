{"ast":null,"code":"var _s = $RefreshSig$();\n// hooks/useWebRTC.js\nimport { useEffect, useRef, useState } from \"react\";\nimport Peer from \"simple-peer\";\nimport startCapturing from \"../components/startCapturing\";\nconst pcConfig = {\n  'iceServers': [{\n    \"urls\": [\"turn:3.34.140.233:3478?transport=tcp\"],\n    \"username\": \"team2\",\n    \"credential\": \"team2\"\n  }]\n};\nconst useWebRTC = (flaskSocketRef, roomName, canvasRef) => {\n  _s();\n  const userVideo = useRef();\n  const peersRef = useRef([]);\n  const [peers, setPeers] = useState([]);\n  const indexRef = useRef(0);\n  useEffect(() => {\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      userVideo.current.srcObject = stream;\n      startCapturing(stream, userVideo, canvasRef, flaskSocketRef, indexRef.current);\n      console.log(\"befor join room\");\n      flaskSocketRef.current.emit(\"join room\", roomName);\n      console.log(\"after join room\");\n      flaskSocketRef.current.on(\"room full\", () => {\n        alert(\"Room is full!\");\n        window.location.href = \"/\";\n      });\n      flaskSocketRef.current.on(\"all users\", users => {\n        console.log(\"all users!\");\n        const peers = [];\n        users.forEach(userID => {\n          const peer = createPeer(userID, flaskSocketRef.current.id, stream);\n          peersRef.current.push({\n            peerID: userID,\n            peer\n          });\n          peers.push({\n            peerID: userID,\n            peer\n          });\n        });\n        setPeers(peers);\n        console.log(peers);\n        indexRef.current = users.length;\n        console.log(\"indexRef!\", indexRef.current);\n      });\n      flaskSocketRef.current.on(\"user joined\", payload => {\n        const peer = addPeer(payload.signal, payload.callerID, stream);\n        const peerObj = {\n          peer,\n          peerID: payload.callerID\n        };\n        peersRef.current.push(peerObj);\n        setPeers(users => [...users, peerObj]);\n      });\n      flaskSocketRef.current.on(\"receiving returned signal\", payload => {\n        const item = peersRef.current.find(p => p.peerID === payload.id);\n        item.peer.signal(payload.signal);\n      });\n      flaskSocketRef.current.on(\"user left\", id => {\n        const peerObj = peersRef.current.find(p => p.peerID === id);\n        if (peerObj) peerObj.peer.destroy();\n        const peers = peersRef.current.filter(p => p.peerID !== id);\n        peersRef.current = peers;\n        setPeers(peers);\n      });\n    });\n  }, [roomName, canvasRef]);\n  const createPeer = (userToSignal, callerID, stream) => {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream,\n      config: pcConfig\n    });\n    peer.on(\"signal\", signal => {\n      flaskSocketRef.current.emit(\"sending signal\", {\n        userToSignal,\n        callerID,\n        signal\n      });\n    });\n    return peer;\n  };\n  const addPeer = (incomingSignal, callerID, stream) => {\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream,\n      config: pcConfig\n    });\n    peer.on(\"signal\", signal => {\n      flaskSocketRef.current.emit(\"returning signal\", {\n        signal,\n        callerID\n      });\n    });\n    peer.signal(incomingSignal);\n    return peer;\n  };\n  return {\n    userVideo,\n    peers,\n    indexRef\n  };\n};\n_s(useWebRTC, \"XJHqxDJifgJ07sqlMSKyRdSpvE4=\");\nexport default useWebRTC;","map":{"version":3,"names":["useEffect","useRef","useState","Peer","startCapturing","pcConfig","useWebRTC","flaskSocketRef","roomName","canvasRef","_s","userVideo","peersRef","peers","setPeers","indexRef","navigator","mediaDevices","getUserMedia","video","audio","then","stream","current","srcObject","console","log","emit","on","alert","window","location","href","users","forEach","userID","peer","createPeer","id","push","peerID","length","payload","addPeer","signal","callerID","peerObj","item","find","p","destroy","filter","userToSignal","initiator","trickle","config","incomingSignal"],"sources":["/home/ubuntu/NMM/react-frontend/src/hooks/useWebRTC.js"],"sourcesContent":["// hooks/useWebRTC.js\nimport { useEffect, useRef, useState } from \"react\";\nimport Peer from \"simple-peer\";\nimport startCapturing from \"../components/startCapturing\";\n\nconst pcConfig = {\n  'iceServers': [{ \"urls\": [\"turn:3.34.140.233:3478?transport=tcp\"], \"username\": \"team2\", \"credential\": \"team2\" }]\n};\n\nconst useWebRTC = (flaskSocketRef, roomName, canvasRef) => {\n  const userVideo = useRef();\n  const peersRef = useRef([]);\n  const [peers, setPeers] = useState([]);\n  const indexRef = useRef(0);\n\n  useEffect(() => {\n    navigator.mediaDevices\n      .getUserMedia({ video: true, audio: true })\n      .then((stream) => {\n        userVideo.current.srcObject = stream;\n        startCapturing(stream, userVideo,canvasRef, flaskSocketRef, indexRef.current);\n        console.log(\"befor join room\");\n        flaskSocketRef.current.emit(\"join room\", roomName);\n        console.log(\"after join room\");\n        flaskSocketRef.current.on(\"room full\", () => {\n          alert(\"Room is full!\");\n          window.location.href = \"/\";\n        });\n\n        flaskSocketRef.current.on(\"all users\", (users) => {\n          console.log(\"all users!\");\n          const peers = [];\n          users.forEach((userID) => {\n            const peer = createPeer(userID, flaskSocketRef.current.id, stream);\n            peersRef.current.push({ peerID: userID, peer });\n            peers.push({ peerID: userID, peer });\n          });\n          setPeers(peers);\n          console.log(peers);\n          indexRef.current = users.length;\n          console.log(\"indexRef!\", indexRef.current);\n        });\n\n        flaskSocketRef.current.on(\"user joined\", (payload) => {\n          const peer = addPeer(payload.signal, payload.callerID, stream);\n          const peerObj = { peer, peerID: payload.callerID };\n          peersRef.current.push(peerObj);\n          setPeers((users) => [...users, peerObj]);\n        });\n\n        flaskSocketRef.current.on(\"receiving returned signal\", (payload) => {\n          const item = peersRef.current.find((p) => p.peerID === payload.id);\n          item.peer.signal(payload.signal);\n        });\n\n        flaskSocketRef.current.on(\"user left\", (id) => {\n          const peerObj = peersRef.current.find((p) => p.peerID === id);\n          if (peerObj) peerObj.peer.destroy();\n          const peers = peersRef.current.filter((p) => p.peerID !== id);\n          peersRef.current = peers;\n          setPeers(peers);\n        });\n      });\n  }, [roomName, canvasRef]);\n\n  const createPeer = (userToSignal, callerID, stream) => {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream,\n      config: pcConfig,\n    });\n\n    peer.on(\"signal\", (signal) => {\n      flaskSocketRef.current.emit(\"sending signal\", {\n        userToSignal,\n        callerID,\n        signal,\n      });\n    });\n\n    return peer;\n  };\n\n  const addPeer = (incomingSignal, callerID, stream) => {\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream,\n      config: pcConfig,\n    });\n\n    peer.on(\"signal\", (signal) => {\n      flaskSocketRef.current.emit(\"returning signal\", { signal, callerID });\n    });\n\n    peer.signal(incomingSignal);\n    return peer;\n  };\n\n  return { userVideo, peers, indexRef };\n};\n\nexport default useWebRTC;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}