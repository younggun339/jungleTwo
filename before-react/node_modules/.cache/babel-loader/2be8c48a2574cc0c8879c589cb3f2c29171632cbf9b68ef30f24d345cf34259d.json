{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/NMM/react-frontend/src/components/ChangeName.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Modal from 'react-modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChangeName = () => {\n  _s();\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [message, setMessage] = useState('');\n  const openModal = () => {\n    setModalIsOpen(true);\n  };\n  const closeModal = () => {\n    setModalIsOpen(false);\n  };\n  const handleConfirm = () => {\n    const newName = document.getElementById('name').value;\n    fetch(\"http://zzrot.store/update\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        user_name: newName\n      })\n    }).then(location.reload()).catch(error => {\n      console.error('Error:', error);\n      setMessage('서버 오류가 발생했습니다.');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: openModal,\n      className: \"refreshRoom\",\n      children: \"\\uB2C9\\uB124\\uC784 \\uBCC0\\uACBD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalIsOpen,\n      onRequestClose: closeModal,\n      className: \"modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uB2C9\\uB124\\uC784\\uBCC0\\uACBD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uBCC0\\uACBD\\uD560 \\uB2C9\\uB124\\uC784\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleConfirm,\n          children: \"\\uD655\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: closeModal,\n        children: \"\\uB2EB\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(ChangeName, \"I68HZllNGO/4P93TRuYNlPPQ0zI=\");\n_c = ChangeName;\nexport default ChangeName;\nvar _c;\n$RefreshReg$(_c, \"ChangeName\");","map":{"version":3,"names":["React","useState","Modal","jsxDEV","_jsxDEV","ChangeName","_s","modalIsOpen","setModalIsOpen","message","setMessage","openModal","closeModal","handleConfirm","newName","document","getElementById","value","fetch","method","headers","body","JSON","stringify","user_name","then","location","reload","catch","error","console","children","onClick","className","fileName","_jsxFileName","lineNumber","columnNumber","isOpen","onRequestClose","type","id","_c","$RefreshReg$"],"sources":["/home/ubuntu/NMM/react-frontend/src/components/ChangeName.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Modal from 'react-modal';\r\n\r\nconst ChangeName = () => {\r\n  const [modalIsOpen, setModalIsOpen] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n\r\n  const openModal = () => {\r\n    setModalIsOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setModalIsOpen(false);\r\n  };\r\n\r\n  const handleConfirm = () => {\r\n    const newName = document.getElementById('name').value;\r\n    fetch(\"http://zzrot.store/update\", {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({user_name:newName}),\r\n    })\r\n    .then(location.reload())\r\n    .catch(error => {\r\n      console.error('Error:', error);\r\n      setMessage('서버 오류가 발생했습니다.');\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n    <button onClick={openModal} className=\"refreshRoom\" >\r\n    닉네임 변경\r\n    </button>\r\n      <Modal isOpen={modalIsOpen} onRequestClose={closeModal} className=\"modal\">\r\n        <h2>닉네임변경</h2>\r\n        <p>변경할 닉네임</p>\r\n        <p>\r\n          <input type=\"text\" id='name'/>\r\n          <button onClick={handleConfirm}>확인</button>\r\n        </p>\r\n        <p>{message}</p>\r\n        {<button onClick={closeModal}>닫기</button>}\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChangeName;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}