{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/NMM/react-frontend/src/components/MakeModal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Modal from 'react-modal';\nimport \"../styles/modal.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RoomModal = ({\n  room\n}) => {\n  _s();\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [message, setMessage] = useState('');\n  const [result, setPasswordCorrect] = useState(false);\n  const openModal = () => {\n    if (room.room_pw === \"\") {\n      window.location.assign(\"http://zzrot.store/game/\" + room.room_id);\n      return;\n    }\n    setModalIsOpen(true);\n  };\n  const closeModal = () => {\n    setModalIsOpen(false);\n  };\n  const handleConfirm = () => {\n    const password = document.getElementById('password').value;\n    fetch(\"http://zzrot.store/room/check\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        room_id: room.room_id,\n        room_pw: password\n      })\n    }).then(response => response.json()).then(data => {\n      if (data.result) {\n        window.location.assign(\"http://zzrot.store/game/\" + room.room_id);\n      } else {\n        setMessage('잘못된 비밀번호입니다. 다시 시도해주세요.');\n      }\n    }).catch(error => {\n      console.error('Error:', error);\n      setMessage('서버 오류가 발생했습니다.');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"roomButton2\",\n      onClick: openModal,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/images/mouse.webp\",\n        alt: \"mouse\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"roomButtonText\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: room.room_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: room.room_master\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), room.room_pw !== \"\" ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/images/jamkka.png\",\n        alt: \"room image\",\n        className: \"Lock\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalIsOpen,\n      onRequestClose: closeModal,\n      className: \"modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uBC29 \\uC815\\uBCF4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC81C\\uBAA9: \", room.room_name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uBC29\\uC7A5: \", room.room_master]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleConfirm,\n          children: \"\\uD655\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), result && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: closeModal,\n        children: \"\\uB2EB\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(RoomModal, \"Hh0mni5Us+KY+OWPxVng33m3E+k=\");\n_c = RoomModal;\nexport default RoomModal;\nvar _c;\n$RefreshReg$(_c, \"RoomModal\");","map":{"version":3,"names":["React","useState","Modal","jsxDEV","_jsxDEV","RoomModal","room","_s","modalIsOpen","setModalIsOpen","message","setMessage","result","setPasswordCorrect","openModal","room_pw","window","location","assign","room_id","closeModal","handleConfirm","password","document","getElementById","value","fetch","method","headers","body","JSON","stringify","then","response","json","data","catch","error","console","children","className","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","room_name","room_master","isOpen","onRequestClose","type","id","_c","$RefreshReg$"],"sources":["/home/ubuntu/NMM/react-frontend/src/components/MakeModal.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Modal from 'react-modal';\r\nimport \"../styles/modal.css\"\r\n\r\nconst RoomModal = ({ room }) => {\r\n  const [modalIsOpen, setModalIsOpen] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n  const [result, setPasswordCorrect] = useState(false);\r\n\r\n  const openModal = () => {\r\n    if (room.room_pw === \"\") {\r\n      window.location.assign(\"http://zzrot.store/game/\"+room.room_id);\r\n      return\r\n    }\r\n    setModalIsOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setModalIsOpen(false);\r\n  };\r\n\r\n  const handleConfirm = () => {\r\n    const password = document.getElementById('password').value;\r\n    fetch(\"http://zzrot.store/room/check\", {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ room_id: room.room_id, room_pw: password }),\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      if (data.result) {\r\n        window.location.assign(\"http://zzrot.store/game/\"+room.room_id);\r\n      } else {\r\n        setMessage('잘못된 비밀번호입니다. 다시 시도해주세요.');\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.error('Error:', error);\r\n      setMessage('서버 오류가 발생했습니다.');\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button className=\"roomButton2\" onClick={openModal} >\r\n          <img src=\"/images/mouse.webp\" alt=\"mouse\" /> \r\n          <div className='roomButtonText'>\r\n          <h3>{room.room_name}</h3>\r\n          <h5>{room.room_master}</h5>\r\n          </div>\r\n          {room.room_pw !== \"\" ? (\r\n            <img src=\"/images/jamkka.png\" alt=\"room image\" className='Lock' />\r\n            ) : (\r\n            <div></div>\r\n          )}\r\n      </button>\r\n      <Modal isOpen={modalIsOpen} onRequestClose={closeModal} className=\"modal\">\r\n        <h2>방 정보</h2>\r\n        <p>제목: {room.room_name}</p>\r\n        <p>방장: {room.room_master}</p>\r\n        <p>\r\n          <input type=\"text\" id='password'/>\r\n          <button onClick={handleConfirm}>확인</button>\r\n        </p>\r\n        <p>{message}</p>\r\n        {result && <button onClick={closeModal}>닫기</button>}\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RoomModal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}