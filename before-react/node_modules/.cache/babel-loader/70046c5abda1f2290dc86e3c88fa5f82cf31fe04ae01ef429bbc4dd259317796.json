{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from 'react';\nfunction LoginCheck({\n  setUserName\n}) {\n  _s();\n  useEffect(() => {\n    fetch(\"https://zzrot.store/check\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(Response => Response.json()).then(data => {\n      setUserName(data.user_name);\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  }, [setUserName]);\n  return null;\n}\n_s(LoginCheck, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = LoginCheck;\nexport default LoginCheck;\nvar _c;\n$RefreshReg$(_c, \"LoginCheck\");","map":{"version":3,"names":["useEffect","LoginCheck","setUserName","_s","fetch","method","headers","then","Response","json","data","user_name","catch","error","console","_c","$RefreshReg$"],"sources":["/home/ubuntu/NMM/react-frontend/src/components/LoginCheck.jsx"],"sourcesContent":["import { useEffect } from 'react';\r\n\r\nfunction LoginCheck({ setUserName }) {\r\n  useEffect(() => {\r\n    fetch(\"https://zzrot.store/check\", {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    })\r\n      .then(Response => Response.json())\r\n      .then(data => {\r\n        setUserName(data.user_name);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error:', error);\r\n      });\r\n  }, [setUserName]);\r\n\r\n  return null;\r\n}\r\n\r\nexport default LoginCheck;"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AAEjC,SAASC,UAAUA,CAAC;EAAEC;AAAY,CAAC,EAAE;EAAAC,EAAA;EACnCH,SAAS,CAAC,MAAM;IACdI,KAAK,CAAC,2BAA2B,EAAE;MACjCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC,CACCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZR,WAAW,CAACQ,IAAI,CAACC,SAAS,CAAC;IAC7B,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC,CAAC,CAAC;EACN,CAAC,EAAE,CAACX,WAAW,CAAC,CAAC;EAEjB,OAAO,IAAI;AACb;AAACC,EAAA,CAlBQF,UAAU;AAAAc,EAAA,GAAVd,UAAU;AAoBnB,eAAeA,UAAU;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}